package com.vinylteam.vinyl.util.impl;

import com.vinylteam.vinyl.entity.Currency;
import com.vinylteam.vinyl.entity.RawOffer;
import com.vinylteam.vinyl.util.VinylParser;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;

public class VinylUaParser implements VinylParser {

    private final Logger logger = LoggerFactory.getLogger(getClass());
    private final String startLink = "http://vinyl.ua";
    private final String classContainingGenresLinks = "dropdown-menu dropdown-menu-left";
    private final String classContainingPagesLinks = "pagination-wrapper margin-top-20";
    private final String classContainingVinyl = "vinyl-release showcase";
    private final String classContainingVinylRelease = "margin-top-clear margin-bot-5";
    private final String classContainingVinylArtist = "text-ellipsis";
    private final String classContainingVinylPriceDetails = "pull-left margin-top-5 showcase-release-price";
    private final String classContainingVinylLinks = "img-showcase-release";

    HashSet<String> getGenresLinks() throws IOException {
        HashSet<String> genreLinks = new HashSet<>();
        Document document = Jsoup.connect(startLink).get();
        logger.debug("Got document out of start link {'startLink':{}, 'document':{}",
                startLink, document);
        Elements innerAnchors = document.getElementsByClass(classContainingGenresLinks).select("a");
        logger.debug("Got collection of anchors {'anchors':{}}", innerAnchors);
        for (Element anchor : innerAnchors) {
            String anchorLink = anchor.attr("href");
            String link = startLink + anchorLink;
            genreLinks.add(link);
            logger.debug("Added link {'link':{}}", link);
        }
        logger.debug("Resulting hash set of genre links is {'genreLinks':{}}", genreLinks);
        return genreLinks;
    }

    HashSet<String> getPageLinks(HashSet<String> genreLinks) throws IOException {
        LinkedHashSet<String> pageLinks = new LinkedHashSet<>();
        for (String genreLink : genreLinks) {
            Document document = Jsoup.connect(genreLink).get();
            logger.debug("Got document out of genre link {'genreLink':{}, 'document':{}", genreLink, document);
            Elements innerAnchors = document.getElementsByClass(classContainingPagesLinks).select("a");
            logger.debug("Got collection of anchors {'anchors':{}}", innerAnchors);
            for (Element anchor : innerAnchors) {
                String anchorLink = anchor.attr("href");
                String link = startLink + anchorLink;
                if (link.contains("?page=") && !link.contains("ussr?page=2")) {
                    pageLinks.add(link);
                    logger.debug("Added link {'link':{}}", link);
                }
            }
        }
        logger.debug("Resulting hash set of page links is {'pageLinks':{}}", pageLinks);
        return pageLinks;
    }

    HashSet<RawOffer> readVinylsDataFromAllPages(HashSet<String> pageLinks) throws IOException {
        HashSet<RawOffer> rawOfferSet = new HashSet<>();
        for (String pageLink : pageLinks) {
            Document document = Jsoup.connect(pageLink).get();
            logger.debug("Got document out of page link {'pageLink':{}, 'document':{}", pageLink, document);
            Elements vinylElements = document.getElementsByClass(classContainingVinyl);
            logger.debug("Got collection of vinyl elements {'vinylElements':{}}", vinylElements);

            for (Element vinylElement : vinylElements) {
                String release = vinylElement.getElementsByClass(classContainingVinylRelease).text();
                String artist = vinylElement.getElementsByClass(classContainingVinylArtist).select("a").text();
                if (artist.equals("")) {
                    artist = "Various Artists";
                }
                String priceDetails = vinylElement.getElementsByClass(classContainingVinylPriceDetails).text();
                String priceNumber = priceDetails.substring(0, priceDetails.indexOf(' '));
                String priceCurrency = priceDetails.substring(priceDetails.indexOf(' ') + 1);
                String vinylLink = startLink + vinylElement
                        .getElementsByClass(classContainingVinylLinks).select("a").attr("href");
                String[] imageLinks = vinylElement
                        .getElementsByClass(classContainingVinylLinks).attr("style").split("'");
                String imageLink = imageLinks[1];
                if (!imageLink.contains("amazonaws.com")) {
                    imageLink = "data:image/svg+xml,%3Csvg width='280' height='255' viewBox='0 0 280 255' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='280' height='255' fill='black'/%3E%3Cpath d='M64.8679 108.362C64.8679 106.634 63.5719 105.014 61.5739 105.014C59.1439 105.014 58.3339 107.066 57.6319 109.928C57.4699 110.144 56.3899 115.22 56.5519 114.68C55.6879 117.65 55.2019 122.834 55.2019 126.29L54.6079 126.182C54.2839 124.4 53.9059 118.73 53.5279 116.948C53.3119 115.922 53.1499 115.22 53.0959 114.842C50.3419 113.33 49.6939 112.952 48.3439 112.952C47.1559 112.952 46.5079 113.654 46.3459 115.004C45.9679 116.84 45.7519 117.758 45.7519 118.73C45.6979 118.946 45.6439 119.432 45.4819 120.188C45.3739 120.836 45.2659 125.048 45.1039 126.128L44.5639 126.236C44.1319 122.348 44.1319 119.864 43.3219 115.436C42.9979 113.816 42.7819 112.574 42.7279 111.764C42.6739 110.954 42.6199 110.36 42.6199 110.036V109.388C42.6199 107.606 41.1619 106.094 39.2719 106.094C38.6239 106.094 38.0299 106.256 37.4899 106.634C36.8419 106.148 36.1399 105.878 35.3839 105.878C33.4939 105.878 32.0359 107.39 32.0359 109.172C32.0359 115.544 32.8999 122.24 34.3579 129.854C35.5999 136.766 36.6259 140.06 38.4079 143.138C39.0019 144.164 40.1359 144.704 41.2699 144.704C41.4859 144.704 41.7559 144.704 41.9719 144.65C42.7279 145.406 43.9699 145.676 44.7799 145.676C47.9659 145.676 49.2079 141.356 50.0179 136.442C50.0179 137.144 51.4759 142.922 51.7999 143.732C52.4479 145.244 53.3659 145.946 54.2299 145.946C57.6319 145.946 58.7659 142.436 59.5219 138.764C60.1159 136.118 60.6019 131.15 60.8719 128.396C61.1419 126.074 64.4899 108.848 64.2199 110.846C64.7599 109.28 64.8679 108.902 64.8679 108.362ZM71.8884 127.64C72.4284 127.964 72.9684 128.072 73.5624 128.072C74.6964 128.072 75.6144 127.586 76.2624 126.722C77.6124 126.398 77.6664 126.398 80.6364 126.398C80.9064 126.722 80.9604 126.83 81.2304 127.316C76.0464 127.586 71.1864 134.552 71.1864 140.492C71.1864 144.218 74.4264 146 78.4224 146C80.3124 146 82.2564 145.352 83.9304 144.326C84.5784 145.352 85.4964 145.892 86.7384 145.892C88.5744 145.892 90.0324 144.38 90.0324 142.598V133.526C89.8704 124.832 88.1964 118.352 81.8784 118.352C79.0164 118.352 79.1244 118.46 76.1004 119.27C75.4524 119.432 74.9124 119.81 74.4264 120.35C71.9964 120.944 70.2684 122.834 70.2684 124.778C70.2684 126.074 70.8624 127.046 71.8884 127.64ZM81.6084 133.958H82.3104L82.4184 138.548L81.5544 139.088L80.0964 139.844C79.8804 140.06 79.5564 140.222 79.1244 140.384C78.7464 140.492 78.3684 140.546 77.9904 140.546C77.8284 140.546 77.6664 140.546 77.5584 140.492C77.5584 140.384 77.5584 140.33 77.6124 140.222C77.6124 139.898 78.0444 138.44 78.1524 138.17C78.3144 137.792 78.5844 137.306 78.9084 136.766C79.2864 136.28 79.7724 135.632 80.3664 134.93C80.7984 134.498 81.1224 134.228 81.3384 134.066L81.6084 133.958ZM114.809 140.384C115.025 140.438 112.379 136.226 112.325 136.01C111.299 134.066 110.435 132.338 109.733 130.88L114.107 123.914L114.863 122.132C115.619 121.052 115.781 120.89 115.835 119.756C115.781 117.92 114.377 116.408 112.595 116.408C110.219 116.408 109.085 118.568 107.951 121.43C107.735 122.024 107.303 122.834 106.763 123.806L106.439 122.726C106.169 122.24 105.467 118.892 105.575 119.108C105.035 117.866 104.225 117.002 102.821 117.002C102.281 116.084 100.985 115.382 99.9047 115.382C97.9067 115.382 96.5567 117.002 96.5567 118.676C96.5567 119 96.5567 119.27 96.6647 119.594C95.9087 120.242 95.5307 121.214 95.5307 122.132C95.5307 123.266 96.9887 126.398 100.337 133.148V133.202C99.2027 134.822 99.2027 134.714 96.0167 140.87C95.6387 141.41 95.4227 142.058 95.4227 142.652C95.4227 144.38 96.8267 146 98.7707 146C99.7967 146 100.823 145.514 101.525 144.542L102.065 143.678C102.335 143.354 102.551 142.814 102.929 142.112C103.145 141.572 103.469 140.924 103.901 140.168C104.333 141.086 104.819 142.004 105.305 142.976C105.575 143.354 105.845 143.624 106.061 143.84C106.331 144.434 106.763 144.92 107.357 145.244L107.681 145.46C108.275 145.892 109.247 146.108 109.841 146.162C110.759 146.594 111.299 146.648 111.731 146.594C112.001 146.648 112.325 146.702 112.595 146.702C113.135 146.702 113.675 146.594 114.161 146.324C115.241 145.73 115.889 144.542 115.889 143.354C115.835 142.544 115.565 141.95 114.809 140.384ZM144.742 106.634C144.85 106.634 145.336 105.608 147.766 105.608C155.326 105.608 159.7 113.168 159.7 121.43C159.7 131.096 157.216 140.33 149.116 145.46C148.738 145.73 148.144 145.838 147.442 145.838C147.01 146.054 146.524 146.108 146.038 146.108C141.178 146.108 137.452 133.688 137.452 125.696C137.452 119.378 137.992 112.628 138.964 107.93C139.342 106.418 140.746 105.392 142.258 105.392C143.068 105.392 144.04 105.77 144.742 106.634ZM146.956 112.52C146.524 117.218 146.2 120.404 146.2 123.374C146.2 127.1 146.632 130.61 147.658 136.604C151.33 132.824 153.382 127.532 153.382 122.78C153.382 118.082 151.384 113.924 146.956 112.52ZM175.615 133.364H175.831L178.261 133.418H182.581C183.229 133.418 183.931 133.256 184.633 132.932C185.335 132.662 185.929 132.068 186.307 131.258C186.577 130.718 186.793 130.124 186.847 129.476C186.955 129.044 187.009 128.072 187.009 126.56C187.009 125.372 186.901 124.292 186.685 123.266C186.415 121.916 185.875 120.674 185.065 119.54C184.255 118.298 183.121 117.272 181.771 116.57C181.717 116.57 181.609 116.516 181.393 116.354L181.015 116.138L180.583 115.922C180.313 115.814 180.205 115.76 180.151 115.76C180.097 115.814 179.989 115.76 179.719 115.652C179.503 115.598 179.341 115.544 179.287 115.544H179.233C179.179 115.598 178.963 115.544 178.693 115.49C178.369 115.436 178.153 115.436 178.045 115.49L175.993 115.706C175.399 115.76 174.859 115.976 174.265 116.246C174.103 116.3 173.941 116.408 173.779 116.516C173.023 116.516 172.321 116.624 171.727 116.894C170.917 117.218 170.161 117.758 169.513 118.514C169.135 118.946 168.757 119.432 168.379 120.026C168.001 120.62 167.623 121.322 167.191 122.24C166.705 123.266 166.219 124.832 165.733 126.884C165.247 128.99 165.031 130.502 165.085 131.366C165.139 131.852 165.139 132.662 165.139 133.796L165.085 136.658C165.085 137.684 165.247 138.656 165.517 139.628C165.895 140.87 166.651 142.112 167.893 143.3C169.027 144.38 170.269 145.19 171.619 145.676C172.861 146.162 173.941 146.432 174.913 146.486C175.669 146.54 176.425 146.594 177.127 146.594H178.045C178.639 146.594 179.233 146.432 179.719 146.162C179.881 146.162 180.043 146.162 180.205 146.216C180.907 146.27 181.501 146.324 182.095 146.324C182.473 146.324 182.797 146.324 183.121 146.27C184.255 146.162 185.173 145.838 185.929 145.352L186.739 144.812L187.117 144.542C188.035 143.894 188.575 142.976 188.575 141.734C188.575 141.086 188.413 140.492 188.035 139.952C187.387 139.034 186.469 138.494 185.173 138.494C184.525 138.494 183.931 138.656 183.391 139.034L183.067 139.304C182.851 139.412 182.635 139.52 182.473 139.682C182.149 139.682 181.609 139.628 180.907 139.574C180.367 139.52 179.557 139.25 178.531 138.656C177.559 138.17 176.911 137.684 176.641 137.306C176.317 136.82 176.047 136.172 175.885 135.362C175.777 134.876 175.669 134.174 175.615 133.364ZM176.101 126.722H175.723C175.777 126.182 175.831 125.642 175.939 125.156C176.155 123.968 176.479 123.104 176.857 122.564L177.127 122.24C177.505 122.186 177.775 122.186 178.045 122.132L178.639 122.402C179.017 122.672 179.341 122.942 179.611 123.266C179.881 123.698 180.097 124.13 180.205 124.616C180.313 125.21 180.367 125.966 180.367 126.776H178.261L176.101 126.722ZM195.603 127.64C196.143 127.964 196.683 128.072 197.277 128.072C198.411 128.072 199.329 127.586 199.977 126.722C201.327 126.398 201.381 126.398 204.351 126.398C204.621 126.722 204.675 126.83 204.945 127.316C199.761 127.586 194.901 134.552 194.901 140.492C194.901 144.218 198.141 146 202.137 146C204.027 146 205.971 145.352 207.645 144.326C208.293 145.352 209.211 145.892 210.453 145.892C212.289 145.892 213.747 144.38 213.747 142.598V133.526C213.585 124.832 211.911 118.352 205.593 118.352C202.731 118.352 202.839 118.46 199.815 119.27C199.167 119.432 198.627 119.81 198.141 120.35C195.711 120.944 193.983 122.834 193.983 124.778C193.983 126.074 194.577 127.046 195.603 127.64ZM205.323 133.958H206.025L206.133 138.548L205.269 139.088L203.811 139.844C203.595 140.06 203.271 140.222 202.839 140.384C202.461 140.492 202.083 140.546 201.705 140.546C201.543 140.546 201.381 140.546 201.273 140.492C201.273 140.384 201.273 140.33 201.327 140.222C201.327 139.898 201.759 138.44 201.867 138.17C202.029 137.792 202.299 137.306 202.623 136.766C203.001 136.28 203.487 135.632 204.081 134.93C204.513 134.498 204.837 134.228 205.053 134.066L205.323 133.958ZM226.536 146.54C222.27 146.54 219.57 142.436 219.57 137.738C219.3 135.794 219.138 129.476 219.138 124.562C219.138 122.942 219.192 121.538 219.192 120.404C219.354 111.71 219.192 113.438 219.408 112.628C219.354 112.466 219.354 112.196 219.354 111.926C219.354 111.17 219.462 110.252 219.516 109.766C219.84 107.876 220.326 108.2 222.486 108.2H225.132C226.914 108.2 228.426 109.766 228.426 111.548C228.426 112.25 228.21 112.898 227.778 113.492C227.778 114.68 227.562 116.57 227.562 122.402C227.562 124.184 227.67 130.232 227.724 131.906C227.778 132.716 227.886 133.742 228.048 134.93C228.21 136.226 228.372 137.36 228.426 138.278C228.48 138.602 228.48 138.872 228.534 139.034C228.75 139.52 228.912 140.006 229.02 140.492C229.344 141.572 229.56 142.544 229.56 143.408C229.56 145.298 228.696 146.54 226.536 146.54ZM242.194 145.838C241.384 145.946 240.574 146.054 239.818 146.054C237.442 146.054 235.768 145.244 235.768 142.868C235.768 141.356 236.902 139.736 238.792 139.52L239.332 139.466C239.386 139.25 239.44 139.088 239.44 138.872C239.44 136.172 234.958 128.342 234.958 121.754C234.958 119.162 238.144 115.922 241.06 115.922C241.492 115.922 241.87 115.976 242.248 116.084C243.112 116.03 243.976 115.976 245.65 115.976C247.432 115.976 248.944 117.488 248.944 119.27C248.944 121.052 247.432 122.618 245.65 122.618C243.49 122.618 243.436 122.618 243.058 122.672C243.004 122.78 243.004 122.888 243.004 122.942C243.004 127.91 247.756 128.72 247.756 138.764C247.756 142.598 246.136 145.352 242.194 145.838Z' fill='%23F7A325'/%3E%3C/svg%3E%0A";
                }
                String[] linkComponents = pageLink.split("[/?]");
                String genre = linkComponents[4];

                RawOffer rawOffer = new RawOffer();
                rawOffer.setShopId(1);
                rawOffer.setRelease(release);
                rawOffer.setArtist(artist);
                rawOffer.setPrice(Double.parseDouble(priceNumber));
                rawOffer.setCurrency(Currency.getCurrency(priceCurrency));
                rawOffer.setGenre(genre);
                rawOffer.setOfferLink(vinylLink);
                rawOffer.setImageLink(imageLink);
                rawOfferSet.add(rawOffer);
                logger.debug("Added rawOffer to hash set{'rawOffer':{}}", rawOffer);
            }
        }
        logger.debug("Resulting hash set of rawOfferSet is {'rawOfferSet':{}}", rawOfferSet);
        return rawOfferSet;
    }

    @Override
    public List<RawOffer> getRawVinylDataList() throws IOException {
        HashSet<String> genresLinks = getGenresLinks();
        HashSet<String> pageLinks = getPageLinks(genresLinks);
        HashSet<RawOffer> rawOfferSet = readVinylsDataFromAllPages(pageLinks);
        List<RawOffer> rawOffers = new ArrayList<>(rawOfferSet);
        logger.debug("Resulting list of rawVinylData from vinyl.ua is {'rawOffers':{}}", rawOffers);
        return rawOffers;
    }

}